pairwise_cohensd_df <- data.frame("cluster_labels_raw"=summary(pairwise_cohensd_obj)$contrast,
"effect_size"=-summary(pairwise_cohensd_obj)$effect.size) %>%
mutate(cluster_labels=ifelse(cluster_labels_raw=="High - Moderate", "Moderate",
ifelse(cluster_labels_raw=="High - Low", "Low",
ifelse(cluster_labels_raw=="Moderate - Low",
"Low_v_Moderate",
ifelse(cluster_labels_raw=="Improving - Stable", "Stable",
ifelse(cluster_labels_raw=="Improving - Worsening", "Worsening",
ifelse(cluster_labels_raw=="Stable - Worsening",
"Worsening_v_Stable", NA))))))) %>%
plyr::rename(replace=c("effect_size"=paste0("pairwise_effect_size_", vars_for_anova[k])))
aov_fits_ftest_df[
which(aov_fits_ftest_df$boscc_type==boscc_type_values[i]&
aov_fits_ftest_df$boscc_subscale==boscc_subscore_values[j]),
grepl(paste0("pairwise_effect_size_",vars_for_anova[k]),
names(aov_fits_ftest_df))] <-
pairwise_cohensd_df[[paste0("pairwise_effect_size_",vars_for_anova[k])]]
}
}
}
# Try to re-do two plots to add sign. info
# 2: Plot IQ boxplot/violin plots by cluster for each of 4 clusterings
aov_fits_ftest_df_v2 <-
inner_join(aov_fits_ftest_df %>%
select(-names(aov_fits_ftest_df)[grepl("pairwise_diff_|pairwise_effect_size_",
names(aov_fits_ftest_df))])%>%
pivot_longer(cols=names(aov_fits_ftest_df)[grepl("signif_diff",
names(aov_fits_ftest_df))],
names_to="test_type",
values_to="group_diff_test")%>%
separate(col=test_type, into=c("test_type","variable"), sep="_diff_")%>%
select(-test_type),
aov_fits_ftest_df %>%
select(-names(aov_fits_ftest_df)[grepl("signif_diff|pairwise_effect_size_",
names(aov_fits_ftest_df))])%>%
pivot_longer(cols=names(aov_fits_ftest_df)[grepl("pairwise_diff_",
names(aov_fits_ftest_df))],
names_to="test_type",
values_to="pairwise_diff_test")%>%
separate(col=test_type, into=c("test_type","variable"), sep="_diff_")%>%
select(-test_type))
# Variables on very different scales; we norm them
covariate_values_normed_df <-
df_all_clust_anova %>%
pivot_longer(cols=vars_for_anova, names_to="covariate_name",
values_to="covariate_value") %>%
select(INIT, covariate_name, covariate_value) %>%
filter(covariate_name!="int_est") %>%
distinct(.) %>%
group_by(covariate_name) %>%
mutate(covariate_value_normed =
(covariate_value-mean(covariate_value, na.rm=TRUE))/sd(covariate_value,
na.rm=TRUE))
rrb_boxplot_preds <-
ggplot(data=df_all_clust_anova %>%
pivot_longer(cols=vars_for_anova, names_to="covariate_name",
values_to="covariate_value") %>%
filter(covariate_name!="int_est") %>%
inner_join(covariate_values_normed_df) %>%
filter(boscc_subscale=="RRB"))+
#facet_grid(~boscc_type)+
geom_boxplot_pattern(mapping=aes(x=covariate_name, y=covariate_value_normed,
pattern=boscc_type, fill=cluster_labels),
position = position_dodge(preserve = "single"),
color = "black", pattern_fill= "black",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6)+
scale_pattern_manual("BOSCC Type", values = c("none", "stripe"))+
xlab("")+
ylab("Normed Value")+
# labs(title="Covariate boxplots by cluster membership for each BOSCC score type clustering analysis,\ncovariate for child's first age of observation only.\n* indicates <0.05, ** < 0.01, *** <0.001 based on Mann-Whitney test of group differences in median.",
#      fill="Cluster (RRB; SC)")+
labs(title="RRB", fill="Cluster", x="")+
scale_x_discrete(labels=c("CSS_sa"="CSS-SA",
"CSS_rrb"="CSS-RRB",
"MRNVIQ"="Nonverbal IQ",
"MRVIQ"="Verbal IQ",
"first_age"="Initial Age"))+
scale_fill_manual(values=c("#009E73", "#E69F00", "#56B4E9"))+
geom_text(data=aov_fits_ftest_df_v2 %>%
filter(variable!="int_est"&boscc_subscale=="RRB") %>%
plyr::rename(replace=c("variable"="covariate_name")) %>%
mutate(sign_ind = ifelse(0.01<=group_diff_test&group_diff_test<0.05,"*",
ifelse(0.001<=group_diff_test&group_diff_test<0.01,"**",
ifelse(group_diff_test&group_diff_test<0.001,"***",
"")))),
mapping=aes(x=covariate_name, y=Inf,
label = sign_ind, color=boscc_type),
vjust=1,
size=13,
position = position_dodge(width=0.9))+
scale_color_manual(values = c("black", "black"))+
guides(pattern = guide_legend(order = 1),
color="none",
fill = guide_legend(override.aes = list(order = 2, pattern = "none")))+
theme_bw()+
theme(text = element_text(size=25),
plot.title = element_text(hjust = 0.5))
sc_boxplot_preds <-
ggplot(data=df_all_clust_anova %>%
pivot_longer(cols=vars_for_anova, names_to="covariate_name",
values_to="covariate_value") %>%
filter(covariate_name!="int_est") %>%
inner_join(covariate_values_normed_df) %>%
filter(boscc_subscale=="SC"))+
#facet_grid(~boscc_type)+
geom_boxplot_pattern(mapping=aes(x=covariate_name, y=covariate_value_normed,
pattern=boscc_type, fill=cluster_labels),
position = position_dodge(preserve = "single"),
color = "black", pattern_fill= "black",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6)+
scale_pattern_manual("BOSCC Type", values = c("none", "stripe"))+
xlab("")+
ylab("Normed Value")+
# labs(title="Covariate boxplots by cluster membership for each BOSCC score type clustering analysis,\ncovariate for child's first age of observation only.\n* indicates <0.05, ** < 0.01, *** <0.001 based on Mann-Whitney test of group differences in median.",
#      fill="Cluster (RRB; SC)")+
labs(title="SC", fill="Cluster")+
scale_x_discrete(labels=c("CSS_sa"="CSS-SA",
"CSS_rrb"="CSS-RRB",
"MRNVIQ"="Nonverbal IQ",
"MRVIQ"="Verbal IQ",
"first_age"="Initial Age"))+
scale_fill_manual(values=c("#009E73", "#E69F00", "#56B4E9"))+
geom_text(data=aov_fits_ftest_df_v2 %>%
filter(variable!="int_est"&boscc_subscale=="SC") %>%
plyr::rename(replace=c("variable"="covariate_name")) %>%
mutate(sign_ind = ifelse(0.01<=group_diff_test&group_diff_test<0.05,"*",
ifelse(0.001<=group_diff_test&group_diff_test<0.01,"**",
ifelse(group_diff_test&group_diff_test<0.001,"***",
"")))),
mapping=aes(x=covariate_name, y=Inf,
label = sign_ind, color=boscc_type),
vjust=1,
size=13,
position = position_dodge(width=0.9))+
scale_color_manual(values = c("black", "black"))+
guides(pattern = guide_legend(order = 1),
color = "none",
fill = guide_legend(order = 2,
override.aes = list(pattern = "none")))+
theme_bw()+
theme(text = element_text(size=25),
plot.title = element_text(hjust = 0.5))
ggarrange(plotlist = list(sc_boxplot_preds,
rrb_boxplot_preds+
labs(caption = "Asterisks denote p-values for Mann-Whitney test of median differences between clusters within BOSCC Type:\n*=p<0.05, **=p<0.01, ***=p<0.001")+
theme(plot.caption = element_text(hjust = 0))),
ncol=1)
ggsave("plots_tables/separate_clust_iq_firstage_boxplot.jpg",
scale=2, limitsize = FALSE)
# Create separate plots for each BOSCC Type
for(i in 1:length(boscc_subscore_values)){
ggplot(data=df_all_clust_anova %>%
pivot_longer(cols=vars_for_anova, names_to="covariate_name",
values_to="covariate_value") %>%
filter(covariate_name!="int_est") %>%
filter(boscc_subscale==boscc_subscore_values[i]) %>%
inner_join(covariate_values_normed_df) %>%
mutate(cluster_labels=factor(cluster_labels)),
mapping=aes(x=covariate_name, y=covariate_value_normed,
fill=cluster_labels))+
facet_grid(~boscc_type)+
geom_boxplot()+
xlab("Covariate")+
ylab("Normed Value")+
# labs(title="* indicates <0.05, ** < 0.01, *** <0.001\nbased on Mann-Whitney test of group differences in median",
#      fill="Cluster")+
labs(title="", fill="Cluster")+
scale_x_discrete(labels=c("CSS_sa"="CSS-SA",
"CSS_rrb"="CSS-RRB",
"MRNVIQ"="Nonverbal IQ",
"MRVIQ"="Verbal IQ",
"first_age"="Initial Age"))+
geom_text(data=aov_fits_ftest_df_v2 %>%
filter(variable!="int_est"&!grepl("_v_", cluster_labels)) %>%
filter(boscc_subscale==boscc_subscore_values[i]),
aes(variable, Inf,
label = ifelse(0.01<=group_diff_test&group_diff_test<0.05,"*",                               ifelse(0.001<=group_diff_test&group_diff_test<0.01,"**",
ifelse(group_diff_test&group_diff_test<0.001,"***",
"")))),
vjust = 1,
color="black", size=8)+
theme_bw()+
theme(text = element_text(size=25),
legend.title = element_text(size = 25),
legend.text = element_text(size = 25),
axis.text.x = element_text(angle = 45, vjust = 0.60, hjust=0.5))+
scale_fill_manual(values=c("white", "grey65", "grey40"))
ggsave(filename=paste0("plots_tables/separate_clust_iq_firstage_boxplot_",
boscc_subscore_values[i], ".png"), scale=2.5, limitsize = FALSE)
}
# Create table with all sig comparisons to see pairwise comps
## Add in pairwise effect sizes too
aov_fits_ftest_df_v3 <-
aov_fits_ftest_df_v2 %>%
inner_join(aov_fits_ftest_df %>%
select(-names(aov_fits_ftest_df)[grepl("pairwise_diff_|signif_diff",
names(aov_fits_ftest_df))])%>%
pivot_longer(cols=names(aov_fits_ftest_df)[grepl("pairwise_effect_size",
names(aov_fits_ftest_df))],
names_to="test_type",
values_to="pairwise_effect_size")%>%
separate(col=test_type, into=c("test_type","variable"), sep="_effect_size_")%>%
select(-test_type))
sign_test_pairwise_table <-
aov_fits_ftest_df_v3 %>%
filter(variable!="int_est") %>%
filter(group_diff_test<0.05) %>%
select(-cluster) %>%
filter(cluster_labels!="Improving"&cluster_labels!="High") %>%
select(boscc_subscale, boscc_type, variable,cluster_labels, everything()) %>%
arrange(desc(boscc_subscale), boscc_type, variable, cluster_labels)
sig_pairwise_indices <-
which(sign_test_pairwise_table$pairwise_diff_test<0.05)
# Flex table
# kable(sign_test_pairwise_table, digits = 4) %>%
#   kable_styling() %>%
#   row_spec(sig_pairwise_indices,
#             color = "white",
#            background = "blue") %>%
#   column_spec(1:3,
#               color = "black",
#               background = "white") %>%
#   collapse_rows(columns = 1:3, valign = "top") %>%
#   save_kable(file = "plots_tables/pairwise_sig_tests.jpg")
flextable(sign_test_pairwise_table) %>%
colformat_double(digits=3) %>%
set_header_labels(values=list(boscc_subscale="BOSCC Subscale", boscc_type="BOSCC Type",
variable="Predictor", cluster_labels = "Cluster",
group_diff_test="Overall P-value",
pairwise_diff_test="Pairwise P-value",
pairwise_effect_size="Cohen's D")) %>%
merge_v(j=1:3) %>%
valign(valign = "top") %>%
hline() %>%
#bg(j=6, i=sig_pairwise_indices, bg="blue") %>%
#color(j=6, i=sig_pairwise_indices, color="white") %>%
bold(j=6, i=sig_pairwise_indices) %>%
autofit() %>%
add_footer_row(values = "Overall provides uncorrected p-values for Mann Whitney test for any median differences between clusters\nPairwise provides FDR-corrected p-values for pairwise tests for any median differences.\nSignificant pairwise differences highlighted in blue.\nCohen's D provides Cohen's D effect sizes for mean differences between pairs. \nOnly results with significant overall tests provided for brevity.", colwidths = 7) %>%
fix_border_issues() %>%
#save_as_image("plots_tables/pairwise_sig_tests.png")
save_as_docx(path="plots_tables/pairwise_sig_tests.docx")
# Do same for 4 panel scatterplot
ggplot(data=df_all_clust_fornaming_with_ints_plot,
mapping=aes(x=normal_traj_est, y=int_est,
color=cluster_labels)) +
facet_grid(boscc_subscale~boscc_type, scales="free") +
geom_point(size=3)+
theme_bw()+
xlab("Estimated Trajectory: Normalized")+
ylab("Estimated Intercept")+
# labs(title="Scatterplot of estimated intercepts by normalized age-trajectory\nfor each BOSCC score type cluster.\n* indicates <0.05, ** < 0.01, *** <0.001 based on Mann-Whitney test of group differences in median.",
#      color="Cluster (RRB; SC)")+
labs(title="", color="Cluster (RRB; SC)")+
geom_text(data=aov_fits_ftest_df,
aes(0, Inf,
label =
ifelse(0.01<=signif_diff_int_est&signif_diff_int_est<0.05,"*",
ifelse(0.001<=signif_diff_int_est&signif_diff_int_est<0.01,
"**",
ifelse(signif_diff_int_est&signif_diff_int_est<0.001,
"***",
"")))), vjust = 1,
color="black", size=8)+
scale_color_manual(values=c("#009E73", "#E69F00", "#56B4E9",
"#009E73", "#E69F00", "#56B4E9"))+
theme(text = element_text(size=20))
ggsave("plots_tables/scatterplot_results_test_int.jpg",
scale=2.5, limitsize = FALSE)
# First, convert to wide form
# Also want to add time in intervention as "explanatory variable"
Full_Long_agerange <-
Full_Long %>%
select(INIT, age) %>%
group_by(INIT) %>%
summarise(time_in_treat = max(age)-min(age))
df_all_clust_fornaming_with_ints_plot_wide <-
inner_join(df_all_clust_fornaming_with_ints_plot,
list(age_init_grid, Full_Long_iq_all_impute, df_all_clust_plot) %>%
Reduce(function(x,y)left_join(x,y), .) %>%
select(INIT, MRVIQ, MRNVIQ, VABCST, MELTSC, MRLTSC,
boscc_type, boscc_subscale,
cluster, cluster_labels),
by=c("INIT","boscc_type", "boscc_subscale",
"cluster","cluster_labels")) %>%
inner_join(Full_Long_agerange) %>%
select(-c("mean_traj", "cluster_size", "sd_traj", "cluster")) %>%
pivot_wider(id_cols = c(INIT, boscc_subscale,
MRVIQ, MRNVIQ, VABCST, MELTSC, MRLTSC, time_in_treat),
names_from = c(boscc_type),
values_from = c(cluster_labels, normal_traj_est, int_est)) %>%
plyr::rename(c("cluster_labels_ADOS BOSCC"="cluster_ADOS_BOSCC",
"cluster_labels_Standard BOSCC"="cluster_Standard_BOSCC"))
# Create flat freq tables
overlap_base_table_props <-
xtabs(formula=~cluster_ADOS_BOSCC+cluster_Standard_BOSCC+boscc_subscale,
data=df_all_clust_fornaming_with_ints_plot_wide)
# Create data frame to format
freq_and_props_table <- list()
for(l in 1:dim(overlap_base_table_props)[3]){
freq_table <- overlap_base_table_props[,,l]
prop_table <- prop.table(overlap_base_table_props, margin=3)[,,l]
freq_and_props <-
matrix(paste0(freq_table, " (", round(prop_table,2), ")"),
dim(freq_table)[1], dim(freq_table)[2])
rownames(freq_and_props) <- rownames(freq_table)
colnames(freq_and_props) <- colnames(freq_table)
indices_save <-
if(dimnames(overlap_base_table_props)[[3]][l]=="RRB"){
1:3
}else{
4:6
}
freq_and_props_table[[l]] <- as.table(freq_and_props[indices_save,indices_save])
names(dimnames(freq_and_props_table[[l]])) <-
gsub(pattern="cluster_", replacement="",
x=names(dimnames(freq_table)))
names(freq_and_props_table)[l] <-
dimnames(overlap_base_table_props)[[3]][l]
}
# Format
rrb_table <-
ggplot(as.data.frame(freq_and_props_table$RRB) %>%
mutate(freq_copy = gsub("\\)", "", gsub(" \\(", "_", Freq))) %>%
separate(col="freq_copy", into=c(NA, "prop_v0"), sep="_") %>%
mutate(prop = as.numeric(gsub("_", "", prop_v0))))+
geom_tile(mapping=aes(x=ADOS_BOSCC, y=Standard_BOSCC, fill=prop), color = "white")+
geom_text(mapping=aes(x=ADOS_BOSCC, y=Standard_BOSCC, label=Freq), size=7.5, family="Times New Roman")+
labs(x="ADOS BOSCC", y="Standard\nBOSCC", title = "RRB")+
scale_x_discrete(limits=rev(levels(as.data.frame(freq_and_props_table$RRB)$ADOS_BOSCC)))+
scale_fill_gradient(low="white", high="#0080FF", name="Proportion", limit=c(0,0.3))+
theme_minimal()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
sc_table <-
ggplot(as.data.frame(freq_and_props_table$SC) %>%
mutate(freq_copy = gsub("\\)", "", gsub(" \\(", "_", Freq))) %>%
separate(col="freq_copy", into=c(NA, "prop_v0"), sep="_") %>%
mutate(prop = as.numeric(gsub("_", "", prop_v0))))+
geom_tile(mapping=aes(x=ADOS_BOSCC, y=Standard_BOSCC, fill=prop), color = "white")+
geom_text(mapping=aes(x=ADOS_BOSCC, y=Standard_BOSCC, label=Freq), size=7.5, family="Times New Roman")+
labs(x="",y="Standard\nBOSCC", title = "SC")+
scale_x_discrete(limits=rev(levels(as.data.frame(freq_and_props_table$SC)$ADOS_BOSCC)))+
scale_fill_gradient(low="white", high="#0080FF", name="Proportion", limit=c(0,0.3))+
theme_minimal()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=25),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
ggarrange(plotlist=list(sc_table, rrb_table), ncol=1)
ggsave(filename = "plots_tables/freq_table_clusters.png", height=6.32, width=7.45)
# Also calculate Cohen's Kappa as a measure of consistency
# RRB
cohen.kappa(x=overlap_base_table_props[1:3,1:3,1])
# SC
cohen.kappa(x=overlap_base_table_props[4:6,4:6,2])
# See what variables predict overlap
df_all_clust_fornaming_with_ints_plot_wide <-
df_all_clust_fornaming_with_ints_plot_wide %>%
mutate(ados_stand_clust_pair = paste0(cluster_ADOS_BOSCC,
", ", cluster_Standard_BOSCC),
boscc_clust_overlap = factor(ifelse(cluster_ADOS_BOSCC==cluster_Standard_BOSCC,
"overlap", "differ")))
# Merge in other variables of interest at "baseline", i.e. 1st time pt
# Interested in: VIQ, NVIQ, vineland scores, MSEL scores, time in treatment
# First, use logistic regression with overlap variable
# Again, none of these used to cluster => bias not induced
log_reg_fit <- list()
for(l in
1:length(unique(df_all_clust_fornaming_with_ints_plot_wide$boscc_subscale))){
log_reg_fit[[l]] <- list()
log_reg_fit[[l]][["fit_obj"]] <-
glm(data=df_all_clust_fornaming_with_ints_plot_wide,
formula =
boscc_clust_overlap~MRVIQ+MRNVIQ+VABCST+MELTSC+MRLTSC+time_in_treat,
subset = df_all_clust_fornaming_with_ints_plot_wide$boscc_subscale==
unique(df_all_clust_fornaming_with_ints_plot_wide$boscc_subscale)[l],
family=binomial())
log_reg_fit[[l]][["est_results"]] <-
data.frame(tidy(log_reg_fit[[l]][["fit_obj"]]),
"boscc_subscale"=
unique(df_all_clust_fornaming_with_ints_plot_wide$boscc_subscale)[l])
}
for(l in 1:length(log_reg_fit)){
if(l==1){
log_reg_fit_allresults <-
log_reg_fit[[l]][["est_results"]]
}else{
log_reg_fit_allresults <- rbind(log_reg_fit_allresults,
log_reg_fit[[l]][["est_results"]])
}
}
kable(log_reg_fit_allresults %>% select(boscc_subscale, everything()),
digits=3) %>%
kable_styling() %>%
collapse_rows(columns = 1, valign = "top")
# None are significant, likely due to differences within overlap/differ
# Look at boxplots
ggplot(data=df_all_clust_fornaming_with_ints_plot_wide %>%
pivot_longer(cols=c("MRVIQ", "MRNVIQ", "VABCST", "MELTSC",
"MRLTSC", "time_in_treat"),
names_to="explantory_vars",
values_to="vars_value"),
mapping=aes(x=ados_stand_clust_pair, y=vars_value)) +
geom_boxplot() +
facet_grid(explantory_vars~boscc_subscale, scales="free") +
theme_bw() +
theme(axis.text.x = element_text(angle=40, hjust=1))
# Need to shrink these groups down somehow.  Maybe do "gaps" of 0,1,2?
ggplot(data=df_all_clust_fornaming_with_ints_plot_wide %>%
pivot_longer(cols=c("MRVIQ", "MRNVIQ", "VABCST", "MELTSC",
"MRLTSC", "time_in_treat"),
names_to="explantory_vars",
values_to="vars_value"),
mapping=aes(x=boscc_clust_overlap, y=vars_value,
fill=boscc_clust_overlap)) +
geom_boxplot() +
facet_grid(explantory_vars~boscc_subscale, scales="free") +
theme_bw()
ggplot(data=df_all_clust_fornaming_with_ints_plot_wide %>%
mutate(boscc_clust_overlap_v2 =
ifelse(ados_stand_clust_pair=="Improving, Improving",
"improve_all",
ifelse(ados_stand_clust_pair=="Worsening, Worsening",
"worsen_all",
"differ"))) %>%
pivot_longer(cols=c("MRVIQ", "MRNVIQ", "VABCST", "MELTSC",
"MRLTSC", "time_in_treat"),
names_to="explantory_vars",
values_to="vars_value"),
mapping=aes(x=boscc_clust_overlap_v2, y=vars_value,
fill=boscc_clust_overlap_v2)) +
geom_boxplot() +
facet_grid(explantory_vars~boscc_subscale, scales="free") +
theme_bw()
# Normalize these 5 variables?  Scales are so different, hard to visualize
# distributions together
df_all_clust_fornaming_og_traj <-
inner_join(df_all_clust %>%
select(c("INIT",
names(df_all_clust)[grepl("clust", names(df_all_clust))])) %>%
distinct() %>%
pivot_longer(cols=names(df_all_clust)[grepl("clust", names(df_all_clust))],
names_to="boscc_type",
values_to="cluster") %>%
separate(col="boscc_type", into=c("boscc_type","trash"),
sep="AvgTot_clus") %>%
select(-trash),
df_all_clust %>%
select(c("INIT",
names(df_all_clust)[grepl("traj_values", names(df_all_clust))])) %>%
distinct() %>%
pivot_longer(cols=names(df_all_clust)[grepl("traj_values", names(df_all_clust))],
names_to="boscc_type",
values_to="og_traj_est") %>%
separate(col="boscc_type", into=c("boscc_type","trash"),
sep="AvgTot_est_traj") %>%
select(-trash)
)
df_all_clust_alltraj <-
inner_join(df_all_clust_fornaming, df_all_clust_fornaming_og_traj) %>%
mutate(boscc_subscale=ifelse(grepl("RRB", boscc_type),"RRB","SC"),
boscc_type=ifelse(grepl("AB_Code2", boscc_type), "ADOS BOSCC",
"Standard BOSCC")) %>%
inner_join(cluster_means_byboscc_plot)
# Look at summ stats for og est traj
og_traj_summ_stats <-
df_all_clust_alltraj %>%
group_by(boscc_subscale, boscc_type, cluster_labels) %>%
summarise(median_og_traj = quantile(og_traj_est*6,
probs=0.5, na.rm = TRUE),
first_quart_og_traj = quantile(og_traj_est*6,
probs=0.25, na.rm = TRUE),
third_quart_og_traj = quantile(og_traj_est*6,
probs=0.75, na.rm = TRUE),
mean_og_traj = mean(og_traj_est*6, na.rm = TRUE),
sd_og_traj = sd(og_traj_est*6, na.rm = TRUE)) %>%
mutate(iqr = third_quart_og_traj-first_quart_og_traj) %>%
ungroup() %>%
select(boscc_subscale, boscc_type, cluster_labels,
median_og_traj, iqr, mean_og_traj, sd_og_traj)
kable(og_traj_summ_stats, digits = 3) %>%
kable_styling() %>%
collapse_rows(columns = 1:2, valign = "top")
clust_summ_stats_table <-
flextable(og_traj_summ_stats %>% arrange(desc(boscc_subscale))) %>%
colformat_double(digits = 2) %>%
set_header_labels(boscc_type="BOSCC Type",
boscc_subscale="BOSCC Subscale",
cluster_labels="Cluster",
median_og_traj="Median Change",
iqr="IQR",
mean_og_traj="Mean Change",
sd_og_traj="SD Change") %>%
autofit() %>%
merge_v(j=1:2) %>%
valign(j=1:2, valign="top") %>%
hline(i=seq(from=3, to=dim(og_traj_summ_stats)[1], by=3),
border=fp_border(color="black", width=1.5)) %>%
fix_border_issues()
save_as_docx(clust_summ_stats_table, path = "plots_tables/clust_summ_stats_table_6months.docx")
save_as_image(clust_summ_stats_table, path = "plots_tables/clust_summ_stats_table_6months.png")
